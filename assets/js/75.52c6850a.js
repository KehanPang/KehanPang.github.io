(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{445:function(t,a,s){"use strict";s.r(a);var r=s(3),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"大模型压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大模型压缩"}},[t._v("#")]),t._v(" 大模型压缩")]),t._v(" "),a("ClientOnly",[a("title-pv")],1),t._v(" "),a("p",[t._v("模型压缩算法旨在将一个庞大而复杂的大模型转化为一个精简的小模型。主要分为4种模型压缩方法：量化、剪枝、知识蒸馏、低秩分解")]),t._v(" "),a("h2",{attrs:{id:"量化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量化"}},[t._v("#")]),t._v(" 量化")]),t._v(" "),a("h2",{attrs:{id:"剪枝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剪枝"}},[t._v("#")]),t._v(" 剪枝")]),t._v(" "),a("h2",{attrs:{id:"知识蒸馏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识蒸馏"}},[t._v("#")]),t._v(" 知识蒸馏")]),t._v(" "),a("h2",{attrs:{id:"低秩分解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#低秩分解"}},[t._v("#")]),t._v(" 低秩分解")]),t._v(" "),a("ClientOnly",[a("leave")],1)],1)}),[],!1,null,null,null);a.default=e.exports}}]);