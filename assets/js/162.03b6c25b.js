(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{527:function(a,s,t){"use strict";t.r(s);var e=t(3),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"git学习笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git学习笔记"}},[a._v("#")]),a._v(" Git学习笔记")]),a._v(" "),s("ClientOnly",[s("title-pv")],1),a._v(" "),s("h2",{attrs:{id:"登录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登录"}},[a._v("#")]),a._v(" 登录")]),a._v(" "),s("p",[a._v("要查看当前登录到 Git 的账号，可以使用以下 Git 命令查看全局配置中的用户信息：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" user.name\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" user.email\n")])])]),s("p",[a._v("这两个命令将显示当前全局配置中的用户名和电子邮件地址。这些信息通常与Git上的账号相关联。")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("注意")]),a._v(" "),s("p",[a._v("这些命令将显示全局配置中的信息，这意味着它们用于在计算机上的所有 Git 仓库。如果您希望查看特定仓库的配置，请进入该仓库的目录，并使用相同的命令，但不带 --global 标志。\n例如：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /path/to/your/repository\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config user.name\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config user.email\n")])])])]),a._v(" "),s("p",[a._v("在git切换登录账号时，通常会出现用户凭据问题，解决办法：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" credential reject\n")])])]),s("h2",{attrs:{id:"分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[a._v("#")]),a._v(" 分支")]),a._v(" "),s("p",[a._v("在Git中，分支（Branch）是用来管理和跟踪代码开发的一个重要概念。分支实际上是代码库的不同版本或线路的副本，每个分支都可以独立地进行修改和开发，而不会影响其他分支。这允许团队协同开发，同时保持代码的稳定性和版本控制。以下是Git中不同分支的一些常见含义：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("主分支（Main/Branch）：主分支通常被称为main或master，是代码库的默认分支。它包含了项目的稳定版本，通常是生产环境中正在运行的代码。新功能通常不会直接添加到主分支，而是在其他分支上进行开发和测试，然后合并到主分支中。")])]),a._v(" "),s("li",[s("p",[a._v("特性分支（Feature Branch）：特性分支是为了开发新功能或修复Bug而创建的分支。每个特性分支通常对应一个特定的任务或问题，开发完成后，可以将特性分支合并回主分支。")])]),a._v(" "),s("li",[s("p",[a._v("发布分支（Release Branch）：发布分支用于准备发布新版本的代码。在发布前，可以在发布分支上进行最后的测试、修复bug和文档更新。一旦准备就绪，发布分支通常会合并回主分支，然后发布到生产环境。")])]),a._v(" "),s("li",[s("p",[a._v("热修复分支（Hotfix Branch）：热修复分支用于紧急修复生产环境中的严重Bug，而不需要等待下一个正式发布。修复完成后，热修复分支会合并回主分支和适用的发布分支。")])])]),a._v(" "),s("h3",{attrs:{id:"创建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[a._v("#")]),a._v(" 创建分支：")]),a._v(" "),s("p",[a._v("要创建一个新的分支，可以使用以下命令：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v('例如，创建一个名为"feature-xyz"的特性分支：')]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch feature-xyz\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("切换分支：")])]),a._v(" "),s("p",[a._v("要切换到一个分支，可以使用以下命令：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("或者使用Git 2.23及更高版本的更现代的切换方式：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" switch "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v('例如，切换到"feature-xyz"分支：')]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout feature-xyz\n")])])]),s("p",[a._v("或：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" switch feature-xyz\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("合并分支：")])]),a._v(" "),s("p",[a._v("要将一个分支的更改合并到另一个分支，可以使用以下命令：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v('例如，将"feature-xyz"分支的更改合并到主分支：')]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout main  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 切换回主分支")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge feature-xyz\n")])])]),s("p",[a._v("当你要合并两个分支时，如果这两个分支之间存在代码差异，Git会尝试自动合并这些差异。这个过程中可能会发生冲突（conflicts），因为Git无法确定应该保留哪个版本的代码。当出现冲突时，需要手动解决这些冲突。")]),a._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[a._v("删除分支：")])]),a._v(" "),s("p",[a._v("要删除一个分支，可以使用以下命令：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v('例如，删除"feature-xyz"分支：')]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" feature-xyz\n")])])]),s("h2",{attrs:{id:"自建gitlab服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自建gitlab服务器"}},[a._v("#")]),a._v(" 自建gitlab服务器")]),a._v(" "),s("h3",{attrs:{id:"切换到-git-用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切换到-git-用户"}},[a._v("#")]),a._v(" 切换到 git 用户")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" adduser "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("su")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v("\n")])])]),s("h3",{attrs:{id:"创建一个仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个仓库"}},[a._v("#")]),a._v(" 创建一个仓库")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" project.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" project.git\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" init "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--bare")]),a._v("\n")])])]),s("h3",{attrs:{id:"ssh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ssh"}},[a._v("#")]),a._v(" SSH")]),a._v(" "),s("p",[a._v("在客户端生成ssh秘钥，将公钥（默认是 ~/.ssh/id_rsa.pub）添加到服务器上 git 用户的 ~/.ssh/authorized_keys 文件中")]),a._v(" "),s("h3",{attrs:{id:"使用git服务器同步代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用git服务器同步代码"}},[a._v("#")]),a._v(" 使用git服务器同步代码")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin git@your-server-ip:project.git\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" origin master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone git@your-server-ip:project.git\n")])])]),s("ClientOnly",[s("leave")],1)],1)}),[],!1,null,null,null);s.default=r.exports}}]);