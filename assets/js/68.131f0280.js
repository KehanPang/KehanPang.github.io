(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{435:function(n,a,e){"use strict";e.r(a);var i=e(3),t=Object(i.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"graph-diffusion-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graph-diffusion-model"}},[n._v("#")]),n._v(" Graph diffusion model")]),n._v(" "),a("p",[n._v("The core idea of the "),a("strong",[n._v("Graph Diffusion model")]),n._v(" involves spreading or diffusing information across a graph. In a graph, nodes are connected by edges, and the diffusion process uses these connections to propagate information from one node to another. The process often involves applying diffusion equations to the graph's adjacency matrix or Laplacian matrix. The purpose is to capture information about a node's local neighborhood or the global structure of the graph.")]),n._v(" "),a("h3",{attrs:{id:"key-formulas-of-graph-diffusion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-formulas-of-graph-diffusion"}},[n._v("#")]),n._v(" Key Formulas of Graph Diffusion")]),n._v(" "),a("ol",[a("li",[a("p",[a("strong",[n._v("Graph Laplacian")]),n._v(":\nThe "),a("strong",[n._v("graph Laplacian")]),n._v(" ( L ) is central to graph diffusion processes. It's derived from the adjacency matrix ( A ) and degree matrix ( D ) (diagonal matrix with node degrees):\n[\nL = D - A\n]\nAlternatively, the "),a("strong",[n._v("normalized Laplacian")]),n._v(" can be used:\n[\nL_{\\text{norm}} = I - D^{-1/2} A D^{-1/2}\n]\nwhere ( I ) is the identity matrix.")])]),n._v(" "),a("li",[a("p",[a("strong",[n._v("Diffusion Equation")]),n._v(":\nA diffusion process on a graph can be modeled by solving a partial differential equation (PDE). One common approach is to use the "),a("strong",[n._v("heat diffusion equation")]),n._v(":\n[\n\\frac{dH(t)}{dt} = - L H(t)\n]\nwhere ( H(t) ) represents the state of the diffusion process at time ( t ), and ( L ) is the graph Laplacian. The solution of this equation is:\n[\nH(t) = \\exp(-t L) H(0)\n]\nwhere ( \\exp(-tL) ) is the matrix exponential of ( -tL ), and ( H(0) ) is the initial state (e.g., initial information or feature at nodes).")])]),n._v(" "),a("li",[a("p",[a("strong",[n._v("Random Walk Diffusion")]),n._v(":\nAnother approach to diffusion uses the "),a("strong",[n._v("random walk normalized Laplacian")]),n._v(" ( L_{\\text{rw}} ):\n[\nL_{\\text{rw}} = I - D^{-1} A\n]\nThe diffusion process in this case can be described by a random walk on the graph.")])])]),n._v(" "),a("h3",{attrs:{id:"example-heat-diffusion-on-a-graph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-heat-diffusion-on-a-graph"}},[n._v("#")]),n._v(" Example: Heat Diffusion on a Graph")]),n._v(" "),a("p",[n._v("Consider a small graph with 4 nodes and the following adjacency matrix ( A ):\n[\nA = \\begin{bmatrix}\n0 & 1 & 1 & 0 \\\n1 & 0 & 1 & 1 \\\n1 & 1 & 0 & 1 \\\n0 & 1 & 1 & 0\n\\end{bmatrix}\n]\nThe degree matrix ( D ) is:\n[\nD = \\begin{bmatrix}\n2 & 0 & 0 & 0 \\\n0 & 3 & 0 & 0 \\\n0 & 0 & 3 & 0 \\\n0 & 0 & 0 & 2\n\\end{bmatrix}\n]\nThus, the graph Laplacian ( L ) is:\n[\nL = D - A = \\begin{bmatrix}\n2 & -1 & -1 & 0 \\\n-1 & 3 & -1 & -1 \\\n-1 & -1 & 3 & -1 \\\n0 & -1 & -1 & 2\n\\end{bmatrix}\n]")]),n._v(" "),a("p",[n._v("To model diffusion, suppose the initial state ( H(0) ) is:\n[\nH(0) = \\begin{bmatrix}\n1 \\\n0 \\\n0 \\\n0\n\\end{bmatrix}\n]\nSolving the heat diffusion equation:\n[\nH(t) = \\exp(-t L) H(0)\n]\nAfter a certain time ( t ), the result ( H(t) ) will describe how the initial information has diffused across the graph, giving a new distribution of information at the nodes.")]),n._v(" "),a("p",[n._v("This diffusion process captures both local and global relationships, making it useful in various graph-based applications such as semi-supervised learning, ranking, and graph convolutional networks.\n"),a("ClientOnly",[a("title-pv")],1)],1),n._v(" "),a("ClientOnly",[a("leave")],1)],1)}),[],!1,null,null,null);a.default=t.exports}}]);